{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/fibonacci","webpackCompilationHash":"","result":{"data":{"doc":{"id":"30fa427a-5a95-5679-a6cf-69b4be5f0418","title":"","description":null,"excerpt":"Fibonacci Instructions: Print out the n-th entry in the fibonacci series. The fibonacci series is an\nordering of numbers where each numberâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"fibonacci\"\n  }, \"Fibonacci\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Instructions:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Print out the n-th entry in the fibonacci series. The fibonacci series is an\\nordering of numbers where each number is the sum of the preceeding two. For\\nexample, the sequence \", \"[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\", \" forms the first ten\\nentries of the fibonacci series.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Examples:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fib(4) === 3\"))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Repl.it:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://repl.it/@rojasleon/13-fibonacci\",\n    target: \"_blank\"\n  }, \"fibonacci\"))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Code:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// first (\\uD83E\\uDD55)\\nfunction fib(n) {\\n  let result = [0, 1];\\n\\n  for (let i = 2; i <= n; i++) {\\n    const a = result[i - 1];\\n    const b = result[i - 2];\\n\\n    result.push(a + b);\\n  }\\n\\n  return result[n];\\n}\\n\")), mdx(\"p\", null, \"with recursion:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function fib(n) {\\n  if (n < 2) return n;\\n\\n  return fib(n - 1) + fib(n - 2);\\n}\\n\")), mdx(\"p\", null, \"with recursion and memoization:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"function memoization(fn) {\\n  const cache = {};\\n\\n  return function(...args) {\\n    if (cache[args]) {\\n      return cache[args];\\n    }\\n\\n    const result = fn.apply(this, args);\\n    cache[args] = result;\\n    return result;\\n  };\\n}\\n\\nfunction slowFib(n) {\\n  if (n < 2) {\\n    return n;\\n  }\\n\\n  return fib(n - 1) + fib(n - 2);\\n}\\n\\nconst fib = memoization(slowFib);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Fibonacci"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"30fa427a-5a95-5679-a6cf-69b4be5f0418","slug":"/fibonacci","previous":null,"next":{"id":"dee97c63-4808-5a3e-b76e-b3accc4a307d","slug":"/steps"}}}}