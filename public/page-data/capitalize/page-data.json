{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/capitalize","webpackCompilationHash":"","result":{"data":{"doc":{"id":"1fa4b762-03d5-5da2-9574-1be46f72990d","title":"","description":null,"excerpt":"Capitalize Instructions: Write a function that accepts a string. The function should capitalize the\nfirst letter of each word in the stringâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"capitalize\"\n  }, \"Capitalize\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Instructions:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write a function that accepts a string. The function should capitalize the\\nfirst letter of each word in the string then return the capitalized string\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Examples:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"capitalize('a short sentence') --> 'A Short Sentence'\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"capitalize('a lazy fox') --> 'A Lazy Fox'\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"capitalize('look, it is working!') --> 'Look, It Is Working!'\"))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Repl.it:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://repl.it/@rojasleon/08-capitalize\",\n    target: \"_blank\"\n  }, \"capitalize\"))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Code:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// First (\\uD83C\\uDF45)\\n\\nfunction capitalize(str) {\\n  const words = [];\\n\\n  for (let word of str.split(' ')) {\\n    words.push(word[0].toUpperCase() + word.slice(1));\\n  }\\n  return words;\\n}\\n\\n// Second (\\uD83C\\uDF46)\\n\\nfunction capitalize(str) {\\n  let result = str[0].toUpperCase();\\n\\n  for (let i = 1; i < str.length; i++) {\\n    if (str[i - 1] === ' ') {\\n      result += str[i].toUpperCase();\\n    } else {\\n      result += str[i];\\n    }\\n  }\\n  return result;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Capitalize"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"1fa4b762-03d5-5da2-9574-1be46f72990d","slug":"/capitalize","previous":{"id":"3d41c980-0758-5dd8-bbdd-4d4869046174","slug":"/chunk-array"},"next":{"id":"a5402859-9ebc-500c-a995-003c80ebba32","slug":"/anagrams"}}}}